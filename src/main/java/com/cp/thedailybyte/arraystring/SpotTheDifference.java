package com.cp.thedailybyte.arraystring;

import java.util.HashMap;

/**
 *
 /**
 * You are given two strings, s and t which only consist of lowercase letters.
 * t is generated by shuffling the letters in s as well as potentially adding an additional random character.
 * Return the letter that was randomly added to t if it exists, otherwise, return ’ ‘.
 * Note: You may assume that at most one additional character can be added to t.
 * Ex: Given the following strings...
 * <p>
 * s = "foobar", t = "barfoot", return 't'
 * s = "ide", t = "idea", return 'a'
 * s = "coding", t "ingcod", return ''
 */
public class SpotTheDifference {

    public static void main(String[] ar) {
        SpotTheDifference obj = new SpotTheDifference();
        System.out.println(obj.spotTheDifference("foobar", "barfoot") == 't');
        System.out.println(obj.spotTheDifference("ide", "idea") == 'a');
        System.out.println(obj.spotTheDifference("coding", "ingcod") == '\0');
        System.out.println("*******************************************");

    }

    public char spotTheDifference(String s, String t) {
        //for string s we can use map to store counter of each character
        //for string t we check each character in map if not exist
        //this is the character to return

        //O(N) space
        //O(N) time

        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (map.get(s.charAt(i)) == null) {
                map.put(s.charAt(i), 1);
            } else {
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
            }
        }

        char c = '\0';
        for (int i = 0; i < t.length(); i++) {
            if (!map.containsKey(t.charAt(i))) {
                return t.charAt(i);
            }
        }
        return c;
    }
}
